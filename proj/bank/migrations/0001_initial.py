# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-14 23:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acct_name', models.CharField(max_length=80)),
                ('acct_number', models.CharField(max_length=60)),
                ('is_active', models.BooleanField(default=True)),
                ('memo', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catg', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['catg'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paid', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('memo', models.TextField(blank=True, default='')),
                ('check_no', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Check number if paid via personal check.', null=True)),
                ('shipment_no', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Shipment number if order has multiple shipments.', null=True)),
                ('created_by', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='bank.Account')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=2)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank.Category')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank.Expense')),
            ],
            options={
                'verbose_name_plural': 'ExpenseCategories',
                'ordering': ['expense', 'weight'],
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paid', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_pre_tax', models.BooleanField(default=False)),
                ('memo', models.TextField(blank=True, default='')),
                ('created_by', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date_paid'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbrev', models.CharField(max_length=20, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_name', models.CharField(max_length=60)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=8, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('loc_address', models.CharField(blank=True, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['seller', 'loc_name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=64)),
                ('order_date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_complete', models.BooleanField(default=False)),
                ('num_shipments', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('memo', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='bank.Account')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='bank.Location')),
            ],
            options={
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='Paytype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paytype', models.CharField(max_length=20, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_name', models.CharField(max_length=60, unique=True)),
                ('website', models.URLField(blank=True, help_text='Link to website of seller', max_length=1000)),
                ('is_active', models.BooleanField(default=True)),
                ('memo', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('pref_account', models.ForeignKey(blank=True, help_text='Preferred Account used for payment to this seller', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sellers', to='bank.Account')),
                ('pref_paytype', models.ForeignKey(blank=True, help_text='Preferred paytype', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sellers', to='bank.Paytype')),
            ],
            options={
                'ordering': ['seller_name'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbrev', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['tag'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='paytype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='bank.Paytype'),
        ),
        migrations.AddField(
            model_name='location',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='bank.Seller'),
        ),
        migrations.AddField(
            model_name='income',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='bank.Source'),
        ),
        migrations.AddField(
            model_name='income',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='expense',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='expenses', through='bank.ExpenseCategory', to='bank.Category'),
        ),
        migrations.AddField(
            model_name='expense',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='bank.Location'),
        ),
        migrations.AddField(
            model_name='expense',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='bank.Order'),
        ),
        migrations.AddField(
            model_name='expense',
            name='paytype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='bank.Paytype'),
        ),
        migrations.AddField(
            model_name='expense',
            name='tags',
            field=models.ManyToManyField(blank=True, to='bank.Tag'),
        ),
        migrations.AddField(
            model_name='account',
            name='inst',
            field=models.ForeignKey(help_text='Institution', on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='bank.Institution'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together=set([('location', 'order_number')]),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('seller', 'loc_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='income',
            unique_together=set([('user', 'source', 'date_paid')]),
        ),
        migrations.AlterUniqueTogether(
            name='expensecategory',
            unique_together=set([('expense', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together=set([('inst', 'acct_number')]),
        ),
    ]
